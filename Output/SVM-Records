
/usr/bin/python3.5 /home/rainer85ah/PycharmProjects/DiagnosticCancerSolution/svm.py
SVM Learning... Fitting...
SVM Predicting...
Results:
              precision    recall  f1-score   support

          0       0.98      1.00      0.99        45
          1       1.00      0.99      0.99        69

avg / total       0.99      0.99      0.99       114

Confusion Matrix:
 [[45  0]
 [ 1 68]]
Score Accuracy Mean:  0.991228070175

Process finished with exit code 0

/****
from sklearn import svm, datasets, metrics
import numpy as np
from sklearn.cross_validation import train_test_split

cancer = datasets.load_breast_cancer()
data = cancer.data
labels = cancer.target

data = np.asarray(data, dtype='float32')
labels = np.asarray(labels, dtype='int32')
trainData, testData, trainLabels, testLabels = train_test_split(data, labels, train_size=0.8, test_size=0.2)

"""
SVM
"""
print('SVM Learning... Fitting... ')
# Linear Support Vector Classification...
svm_clf = svm.SVC(C=1.0, kernel='linear', degree=2, gamma='auto', coef0=0.01, shrinking=True, probability=False,
                  tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1,
                  decision_function_shape=None, random_state=None)

svm_clf.fit(X=trainData, y=trainLabels)

print('SVM Predicting... ')
predicted = svm_clf.predict(X=testData)

print("Results: \n %s" % metrics.classification_report(testLabels, predicted))
matrix = metrics.confusion_matrix(testLabels, predicted)
print("Confusion Matrix: \n %s" % matrix)
print('Score Accuracy Mean: ', svm_clf.score(X=testData, y=testLabels))
*****/